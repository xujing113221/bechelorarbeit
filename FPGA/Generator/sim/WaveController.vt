// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "04/03/2017 00:03:01"
                                                                                
// Verilog Test Bench template for design : WaveController
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ns/ 1 ps
module WaveController_vlg_tst();
// constants   
reg eachvec;                                        
// test vector input registers
reg [7:0] AmpX10;
reg BusySgn;
reg CLK;
reg [1:0] Channel;
reg [7:0] Duty;
reg [7:0] Freq;
reg RST_n;
reg [7:0] Waveform;
// wires                                               
wire [15:0]  DAC_Data;
wire TriggerSign;

initial begin 
	BusySgn <= 1'b1;			// free;
	Channel <= 2'b0;			// channel_1;
	AmpX10  <= 8'd150;		// V_10v;
	Freq	  <= 8'd10;			// 10Hz;
	Duty	  <= 8'd80;			// 50%;
	Waveform<= 8'd5;			// sine wave;
	end

// assign statements (if any)                          
WaveController i1 (
// port map - connection between master ports and signals/registers   
	.AmpX10(AmpX10),
	.BusySgn(BusySgn),
	.CLK(CLK),
	.Channel(Channel),
	.DAC_Data(DAC_Data),
	.Duty(Duty),
	.Freq(Freq),
	.RST_n(RST_n),
	.TriggerSign(TriggerSign),
	.Waveform(Waveform)
);



initial begin                                                  
	CLK = 0;  
	forever #20 CLK = ~CLK;		// 25MHz											                         
	end  

initial begin
	RST_n = 0;
	#100;
	RST_n = 1;
	end 
 
always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
                                                       
@eachvec;                                              
// --> end                                             
end                                                    
endmodule

